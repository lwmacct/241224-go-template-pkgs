version: "3"
dotenv:
  [".env", "{{.HOME}}/.env", ".local/taskfile/.env", "template/taskfile/.env"]

vars:
  DEVELOPER: "https://yuque.com/lwmacct"
  TIME_NOW:
    sh: TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S %Z'
  PATH_LOCAL: ".local"
  PATH_BIN: "{{.PATH_LOCAL}}/bin"
  PATH_DATA: "{{.PATH_LOCAL}}/data"
  PATH_ARCHIVE: "{{.PATH_LOCAL}}/archive"
  PATH_INIT:
    sh: |
      mkdir -p {{.PATH_BIN}} {{.PATH_DATA}} {{.PATH_ARCHIVE}} {{.PATH_LOCAL}}/script
      if [ ! -d ".local/taskfile" ]; then cp -af template/taskfile .local/taskfile; fi
  PATH_FULL:
    sh: pwd
  GO_MODE_NAME:
    sh: go mod edit -json | jq -r .Module.Path
  GO_APP_PROJECT:
    sh: echo "{{.GO_MODE_NAME}}" | awk -F/ '{print $NF}'
  GO_APP_NAME:
    sh: echo "{{.GO_APP_PROJECT}}" | cut -d'-' -f2-
  GO_APP_PATH: "{{.PATH_BIN}}/{{.GO_APP_NAME}}"
  GIT_TAG_LATEST:
    sh: |
      latest_tag=$(git describe --tags --abbrev=0 2>/dev/null) || true
      if [[ "${latest_tag}" == "" ]]; then
          git tag v0.0.0 -m "init" 
          latest_tag="v0.0.0";
      fi
      echo ${latest_tag}
  GIT_TAG_NEXT:
    sh: |
      echo {{.GIT_TAG_LATEST}} | awk -F. '{print $1"."$2"."$3+1}'
  GIT_COMMIT:
    sh: git log -n 1 --format=%h 2>/dev/null || echo "0000"
  GO_BUILD_LDFLAGS_SW: -s -w
  GO_BUILD_LDFLAGS_X: >-
    -X '{{.GO_MODE_NAME}}/app/version.AppRawName={{.GO_APP_NAME}}'
    -X '{{.GO_MODE_NAME}}/app/version.AppProject={{.GO_APP_PROJECT}}'
    -X '{{.GO_MODE_NAME}}/app/version.AppVersion={{.GIT_TAG_NEXT}}'
    -X '{{.GO_MODE_NAME}}/app/version.GitCommit={{.GIT_COMMIT}}'
    -X '{{.GO_MODE_NAME}}/app/version.BuildTime={{.TIME_NOW}}'
    -X '{{.GO_MODE_NAME}}/app/version.Developer={{.DEVELOPER}}'
    -X '{{.GO_MODE_NAME}}/app/version.Workspace={{.PATH_FULL}}'
  GO_BUILD_LDFLAGS: "{{.GO_BUILD_LDFLAGS_SW}} {{.GO_BUILD_LDFLAGS_X}}"

includes:
  build:
    taskfile: .local/taskfile/build.yaml
    optional: true

  run:
    taskfile: .local/taskfile/run.yaml
    optional: true
